name: Pest Tests

on:
  workflow_call:
    inputs:
      PHP_VERSION:
        required: true
        type: string
      PHP_EXTENSIONS:
        required: true
        type: string
      PHP_INI_PROPERTIES:
        required: true
        type: string
      COMPOSER_FLAGS:
        required: true
        type: string
      CACHE_KEY:
        required: true
        type: string

jobs:
  normal-tests:
    name: Normal Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: false # Temporarily disable tests until the issues are fixed - see pestphp/pest#1489
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-normal-tests
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2.35.5
        with:
          php-version: ${{ inputs.PHP_VERSION }}
          extensions: ${{ inputs.PHP_EXTENSIONS }}
          ini-values: ${{ inputs.PHP_INI_PROPERTIES }}
          coverage: xdebug
          tools: composer:v2

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install composer dependencies
        uses: ramsey/composer-install@3cf229dc2919194e9e36783941438d17239e8520 # v3.1.1
        with:
          composer-options: ${{ inputs.COMPOSER_FLAGS }}
          custom-cache-key: ${{ inputs.CACHE_KEY }}

      - name: Run Tests
        env:
          XDEBUG_MODE: coverage
        run: |
          vendor/bin/pest --ci --parallel --exclude-group=browser

  browser-tests:
    name: Browser Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: false # Temporarily disable tests until the issues are fixed - see pestphp/pest#1489
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-browser-tests
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup PHP
        uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2.35.5
        with:
          php-version: ${{ inputs.PHP_VERSION }}
          extensions: ${{ inputs.PHP_EXTENSIONS }}
          ini-values: ${{ inputs.PHP_INI_PROPERTIES }}
          coverage: xdebug
          tools: composer:v2

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install composer dependencies
        uses: ramsey/composer-install@3cf229dc2919194e9e36783941438d17239e8520 # v3.1.1
        with:
          composer-options: ${{ inputs.COMPOSER_FLAGS }}
          custom-cache-key: ${{ inputs.CACHE_KEY }}

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install node dependencies
        run: |
          npm ci
          npm run build

      - name: Install Playwright Browsers
        # TODO: Migrate to playwright docker when pest supports it - pestphp/pest-plugin-browser#131
        run: npx playwright install --with-deps

      - name: Perform database migrations
        run: |
          php artisan migrate --graceful --ansi --env=testing

      - name: Run Tests
        env:
          XDEBUG_MODE: coverage
        run: |
          vendor/bin/pest --ci --parallel --group=browser
